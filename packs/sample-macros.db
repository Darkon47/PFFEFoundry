{"_id":"13AHAyh9DklWxvWP","name":"Show Defenses","permission":{"default":0},"type":"script","sort":100001,"flags":{},"scope":"global","command":"game.pf1.rollDefenses();","author":"T9i9xVjdkHeFZC72","img":"systems/pf1/icons/items/armor/shield.png","actorIds":[]}
{"name":"Roll Skill","permission":{"default":0,"T9i9xVjdkHeFZC72":3},"type":"script","flags":{},"scope":"global","command":"// CONFIGURATION\r\n// If one or more tokens are selected, those will be used instead of the listed actors\r\n// Leave the actorNames array empty to guess the players\r\n// Example actorNames: `actorNames: [\"Bob\", \"John\"],`\r\nconst c = {\r\n  actorNames: [],\r\n  skills: [\"per\", \"sen\", \"ste\", \"sur\"],\r\n  labels: [null, null, null, null],\r\n};\r\n// END CONFIGURATION\r\n\r\nconst tokens = canvas.tokens.controlledTokens;\r\nlet actors = tokens.map(o => o.actor);\r\nif (!actors.length && c.actorNames.length) actors = game.actors.entities.filter(o => c.actorNames.includes(o.name));\r\nif (!actors.length) actors = game.actors.entities.filter(o => o.isPC);\r\nactors = actors.filter(o => o.hasPerm(game.user, \"OWNER\"));\r\n\r\nif (!actors.length) return ui.notifications.warn(\"No applicable actor(s) found\");\r\n\r\nconst _roll = function(type) {\r\n  actors.forEach(o => {\r\n    try {\r\n      o.rollSkill(type, { event: new MouseEvent({}) });\r\n    } catch (e) {}\r\n  });\r\n};\r\n\r\nconst buttons = c.skills.reduce((cur, s, a) => {\r\n  let label = c.labels[a];\r\n  if (label == null) label = CONFIG.PF1.skills[s] || \"Unknown Skill\";\r\n  cur[s] = {\r\n    label: label,\r\n    callback: () => _roll(s),\r\n  };\r\n  return cur;\r\n}, {});\r\n\r\nconst msg = `Choose a skill to roll for the following actor(s): <strong>${actors.map(o => o.name).join(\"</strong>, <strong>\")}</strong>`;\r\n\r\nnew Dialog({\r\n  title: \"Roll saving throw\",\r\n  content: `<p>${msg}</p>`,\r\n  buttons: buttons,\r\n}).render(true);","author":"T9i9xVjdkHeFZC72","img":"systems/pf1/icons/items/inventory/dice.jpg","actorIds":[],"_id":"D7ZtlwumC4OW0nFT"}
{"name":"Roll Saving Throw","permission":{"default":0,"T9i9xVjdkHeFZC72":3},"type":"script","flags":{},"scope":"global","command":"// CONFIGURATION\r\n// Leave the actorNames array empty to guess the players\r\n// Example actorNames: `actorNames: [\"Bob\", \"John\"],`\r\nconst c = {\r\n  actorNames: [],\r\n};\r\n// END CONFIGURATION\r\n\r\nconst tokens = canvas.tokens.controlledTokens;\r\nlet actors = tokens.map(o => o.actor);\r\nif (!actors.length && c.actorNames.length) actors = game.actors.entities.filter(o => c.actorNames.includes(o.name));\r\nif (!actors.length) actors = game.actors.entities.filter(o => o.isPC);\r\nactors = actors.filter(o => o.hasPerm(game.user, \"OWNER\"));\r\n\r\nif (!actors.length) return ui.notifications.warn(\"No applicable actor(s) found\");\r\n\r\nconst _roll = function(type) {\r\n  actors.forEach(o => {\r\n    o.rollSavingThrow(type, { event: new MouseEvent({}) });\r\n  });\r\n};\r\n\r\nconst msg = `Choose a saving throw to roll for the following actor(s): <strong>${actors.map(o => o.name).join(\"</strong>, <strong>\")}</strong>`;\r\n\r\nnew Dialog({\r\n  title: \"Roll saving throw\",\r\n  content: `<p>${msg}</p>`,\r\n  buttons: {\r\n    fort: {\r\n      label: \"Fortitude\",\r\n      callback: () => _roll(\"fort\"),\r\n    },\r\n    ref: {\r\n      label: \"Reflex\",\r\n      callback: () => _roll(\"ref\"),\r\n    },\r\n    will: {\r\n      label: \"Will\",\r\n      callback: () => _roll(\"will\"),\r\n    },\r\n  },\r\n}).render(true);","author":"T9i9xVjdkHeFZC72","img":"systems/pf1/icons/misc/heart-inside.png","actorIds":[],"_id":"WBs6fUCfxNpU7QH0"}
{"_id":"D7ZtlwumC4OW0nFT","name":"Roll Skill","permission":{"default":0,"T9i9xVjdkHeFZC72":3},"type":"script","flags":{},"scope":"global","command":"// CONFIGURATION\r\n// If one or more tokens are selected, those will be used instead of the listed actors\r\n// Leave the actorNames array empty to guess the players\r\n// Example actorNames: `actorNames: [\"Bob\", \"John\"],`\r\nconst c = {\r\n  actorNames: [],\r\n  skills: [\"per\", \"sen\", \"ste\", \"sur\"],\r\n  labels: [null, null, null, null],\r\n};\r\n// END CONFIGURATION\r\n\r\nconst tokens = canvas.tokens.controlledTokens;\r\nlet actors = tokens.map(o => o.actor);\r\nif (!actors.length && c.actorNames.length) actors = game.actors.entities.filter(o => c.actorNames.includes(o.name));\r\nif (!actors.length) actors = game.actors.entities.filter(o => o.isPC);\r\nactors = actors.filter(o => o.hasPerm(game.user, \"OWNER\"));\r\n\r\nif (!actors.length) return ui.notifications.warn(\"No applicable actor(s) found\");\r\n\r\nconst _roll = function(type) {\r\n  actors.forEach(o => {\r\n    try {\r\n      o.rollSkill(type, { event: new MouseEvent({}), skipDialog: true });\r\n    } catch (e) {}\r\n  });\r\n};\r\n\r\nconst buttons = c.skills.reduce((cur, s, a) => {\r\n  let label = c.labels[a];\r\n  if (label == null) label = CONFIG.PF1.skills[s] || \"Unknown Skill\";\r\n  cur[s] = {\r\n    label: label,\r\n    callback: () => _roll(s),\r\n  };\r\n  return cur;\r\n}, {});\r\n\r\nconst msg = `Choose a skill to roll for the following actor(s): <strong>${actors.map(o => o.name).join(\"</strong>, <strong>\")}</strong>`;\r\n\r\nnew Dialog({\r\n  title: \"Roll saving throw\",\r\n  content: `<p>${msg}</p>`,\r\n  buttons: buttons,\r\n}).render(true);","author":"T9i9xVjdkHeFZC72","img":"systems/pf1/icons/items/inventory/dice.jpg","actorIds":[]}
